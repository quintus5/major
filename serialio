#include<hidef.h>
#include "derivative.h"

#define set 1
#define clear 0


// setup serial port
void setupserial(){

  SCI1BDH = 0;
  SCI1BDL = 156;    // baurate of 9600
  SCI1CR1 = 0X4C;   //  control register with enable bit on
  SCI1CR2 = 0X24;   // enable RIE TIE TE RE
}

// reset servo
void resetservo(){
  // call pwm function to reset servo to initial top left position
}

// read data from serial input
// will reading clear SCI1DRL?
char readinput(){
  char data = SCI1DRL;
  return data;
}

// interrupt for SCI1
interrupt 21 void SCI1_ISR(void){

  SCI1SR1 = SCI1SR1|SCI1SR1_RDRF_MASK;    // clear flag interrupt
  PORTA = set;
}

void int main(int argc, char const *argv[]) {

  PORTA = 0;
  int increment;
  char data;

  setupserial();
  _asm CLI;

  while(1){

    if(PORTA == set){               // check if there is any interrupt
      PORTA = clear;                // clear port so next time interrupt occurs
      data = readinput();           // get data from serial port

      if(data == 'y'){              // check if wanna resetservo
        resetservo();
      }
      else if(data >= '0' && data <= '9'){    // if not gonna resetservo, then adjuest increment
        increment = data-'0';       // get the (int)data
      }

    }

    // pass increment to pwm output
  }

  return 0;
}
